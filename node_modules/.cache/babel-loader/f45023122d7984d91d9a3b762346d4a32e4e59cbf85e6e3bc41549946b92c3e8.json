{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thedu\\\\OneDrive\\\\Desktop\\\\Making\\\\Coding Projects\\\\appointment-planner-starting-v18\\\\appointment-planner-starting-v18\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([{\n    name: 'Bob Jones',\n    phone: '5018172634',\n    email: 'bobjones@gmail.com'\n  }]);\n  const [appointments, setAppointments] = useState([{\n    name: 'Bob Jones',\n    contact: 'contact',\n    date: '1/1/1111',\n    time: '9:00'\n  }]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const addContact = contact => {\n    setContacts(prev => [contact, ...prev]);\n    console.log(contacts);\n  };\n  const addAppointment = appointment => {\n    if (appointment.name && appointment.contact && appointment.phone && appointment.email) {\n      setAppointments(prev => [appointment, ...prev]);\n    } else {\n      console.error('invalid input: Check name, contact, phone, and email');\n    }\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contacts: contacts,\n        setContacts: setContacts,\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        appointments: appointments,\n        setAppointments: setAppointments,\n        addAppointment: addAppointment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dgUhtDa9FKcI7vtzbzo55+lNRKw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","name","phone","email","appointments","setAppointments","contact","date","time","addContact","prev","console","log","addAppointment","appointment","error","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["C:/Users/thedu/OneDrive/Desktop/Making/Coding Projects/appointment-planner-starting-v18/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import { React, useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n const [contacts, setContacts] = useState([{name: 'Bob Jones', phone: '5018172634', email: 'bobjones@gmail.com'}]);\r\n const [appointments, setAppointments] = useState([{name: 'Bob Jones', contact: 'contact', date: '1/1/1111', time: '9:00'}]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n const addContact = contact => {\r\n  setContacts(prev => [contact, ...prev]);\r\n  console.log(contacts);\r\n }\r\n\r\n const addAppointment = appointment => {\r\n  if (appointment.name && appointment.contact && appointment.phone && appointment.email) {\r\n    setAppointments(prev => [appointment, ...prev]);\r\n  } else {\r\n    console.error('invalid input: Check name, contact, phone, and email');\r\n  }\r\n }\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage contacts={contacts} setContacts={setContacts} addContact={addContact} /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage appointments={appointments} setAppointments={setAppointments} addAppointment={addAppointment} /> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}